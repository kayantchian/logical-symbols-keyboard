/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package MathKeyboard;

import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.StringSelection;

/**
 *
 * @author Kayan Tchian
 */
public class keyboard extends javax.swing.JFrame {

    /**
     * Creates new form keyboard
     */
    public keyboard() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        Tela = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        Buniversal = new javax.swing.JButton();
        Bparticular = new javax.swing.JButton();
        Bparticularu = new javax.swing.JButton();
        Bnoparticular = new javax.swing.JButton();
        Bbecause = new javax.swing.JButton();
        Bthefore = new javax.swing.JButton();
        Bcongruence = new javax.swing.JButton();
        Bmequivalence = new javax.swing.JButton();
        Bmimplies = new javax.swing.JButton();
        Bequivalence = new javax.swing.JButton();
        Bimplies = new javax.swing.JButton();
        Bconj = new javax.swing.JButton();
        Bdisj = new javax.swing.JButton();
        Bxor = new javax.swing.JButton();
        Bmodels = new javax.swing.JButton();
        Bprov = new javax.swing.JButton();
        Bnomodels = new javax.swing.JButton();
        Bnoprov = new javax.swing.JButton();
        Bfalse = new javax.swing.JButton();
        Bimpliesc = new javax.swing.JButton();
        Bsubset = new javax.swing.JButton();
        Bbox = new javax.swing.JButton();
        Bintersec = new javax.swing.JButton();
        Bunion = new javax.swing.JButton();
        Bnoeq = new javax.swing.JButton();
        Bin = new javax.swing.JButton();
        Bnoin = new javax.swing.JButton();
        Blewis = new javax.swing.JButton();
        Bdiamond = new javax.swing.JButton();
        Bdelta = new javax.swing.JButton();
        Bnabla = new javax.swing.JButton();
        Brussel = new javax.swing.JButton();
        Bempty = new javax.swing.JButton();
        Bproduc = new javax.swing.JButton();
        Bdefiniton = new javax.swing.JButton();
        TResultado = new javax.swing.JTextField();
        Deletar = new javax.swing.JButton();
        Limpar = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jMenuBar1 = new javax.swing.JMenuBar();
        Moptions = new javax.swing.JMenu();
        JCopiar = new javax.swing.JRadioButtonMenuItem();
        JDigitar = new javax.swing.JRadioButtonMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Símbolos Lógicos");
        setResizable(false);

        Tela.setBackground(new java.awt.Color(153, 153, 153));
        Tela.setName("Tela"); // NOI18N

        jSeparator1.setBackground(new java.awt.Color(102, 102, 102));

        Buniversal.setBackground(java.awt.SystemColor.controlShadow);
        Buniversal.setFont(new java.awt.Font("Cambria Math", 0, 18)); // NOI18N
        Buniversal.setText("∀");
        Buniversal.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Buniversal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuniversalActionPerformed(evt);
            }
        });

        Bparticular.setBackground(java.awt.SystemColor.controlShadow);
        Bparticular.setFont(new java.awt.Font("Cambria Math", 0, 18)); // NOI18N
        Bparticular.setText("∃");
        Bparticular.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Bparticular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BparticularActionPerformed(evt);
            }
        });

        Bparticularu.setBackground(java.awt.SystemColor.controlShadow);
        Bparticularu.setFont(new java.awt.Font("Cambria Math", 0, 18)); // NOI18N
        Bparticularu.setText("∃!");
        Bparticularu.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Bparticularu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BparticularuActionPerformed(evt);
            }
        });

        Bnoparticular.setBackground(java.awt.SystemColor.controlShadow);
        Bnoparticular.setFont(new java.awt.Font("Cambria Math", 0, 18)); // NOI18N
        Bnoparticular.setText("∄");
        Bnoparticular.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Bnoparticular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BnoparticularActionPerformed(evt);
            }
        });

        Bbecause.setBackground(java.awt.SystemColor.controlShadow);
        Bbecause.setFont(new java.awt.Font("Cambria Math", 0, 18)); // NOI18N
        Bbecause.setText("∵");
        Bbecause.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Bbecause.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BbecauseActionPerformed(evt);
            }
        });

        Bthefore.setBackground(java.awt.SystemColor.controlShadow);
        Bthefore.setFont(new java.awt.Font("Cambria Math", 0, 18)); // NOI18N
        Bthefore.setText("∴");
        Bthefore.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Bthefore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtheforeActionPerformed(evt);
            }
        });

        Bcongruence.setBackground(java.awt.SystemColor.controlShadow);
        Bcongruence.setFont(new java.awt.Font("Cambria Math", 0, 18)); // NOI18N
        Bcongruence.setText("≡");
        Bcongruence.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Bcongruence.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BcongruenceActionPerformed(evt);
            }
        });

        Bmequivalence.setBackground(java.awt.SystemColor.controlShadow);
        Bmequivalence.setFont(new java.awt.Font("Cambria Math", 0, 18)); // NOI18N
        Bmequivalence.setText("⇔");
        Bmequivalence.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Bmequivalence.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BmequivalenceActionPerformed(evt);
            }
        });

        Bmimplies.setBackground(java.awt.SystemColor.controlShadow);
        Bmimplies.setFont(new java.awt.Font("Cambria Math", 0, 18)); // NOI18N
        Bmimplies.setText("⇒");
        Bmimplies.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Bmimplies.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BmimpliesActionPerformed(evt);
            }
        });

        Bequivalence.setBackground(java.awt.SystemColor.controlShadow);
        Bequivalence.setFont(new java.awt.Font("Cambria Math", 0, 18)); // NOI18N
        Bequivalence.setText("↔");
        Bequivalence.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Bequivalence.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BequivalenceActionPerformed(evt);
            }
        });

        Bimplies.setBackground(java.awt.SystemColor.controlShadow);
        Bimplies.setFont(new java.awt.Font("Cambria Math", 0, 18)); // NOI18N
        Bimplies.setText("→");
        Bimplies.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Bimplies.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BimpliesActionPerformed(evt);
            }
        });

        Bconj.setBackground(java.awt.SystemColor.controlShadow);
        Bconj.setFont(new java.awt.Font("Cambria Math", 0, 18)); // NOI18N
        Bconj.setText("∧");
        Bconj.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Bconj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BconjActionPerformed(evt);
            }
        });

        Bdisj.setBackground(java.awt.SystemColor.controlShadow);
        Bdisj.setFont(new java.awt.Font("Cambria Math", 0, 18)); // NOI18N
        Bdisj.setText("∨");
        Bdisj.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Bdisj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BdisjActionPerformed(evt);
            }
        });

        Bxor.setBackground(java.awt.SystemColor.controlShadow);
        Bxor.setFont(new java.awt.Font("Cambria Math", 0, 18)); // NOI18N
        Bxor.setText("⊕");
        Bxor.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Bxor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BxorActionPerformed(evt);
            }
        });

        Bmodels.setBackground(java.awt.SystemColor.controlShadow);
        Bmodels.setFont(new java.awt.Font("Cambria Math", 0, 18)); // NOI18N
        Bmodels.setText("⊨");
        Bmodels.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Bmodels.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BmodelsActionPerformed(evt);
            }
        });

        Bprov.setBackground(java.awt.SystemColor.controlShadow);
        Bprov.setFont(new java.awt.Font("Cambria Math", 0, 18)); // NOI18N
        Bprov.setText("⊢");
        Bprov.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Bprov.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BprovActionPerformed(evt);
            }
        });

        Bnomodels.setBackground(java.awt.SystemColor.controlShadow);
        Bnomodels.setFont(new java.awt.Font("Cambria Math", 0, 18)); // NOI18N
        Bnomodels.setText("⊭");
        Bnomodels.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Bnomodels.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BnomodelsActionPerformed(evt);
            }
        });

        Bnoprov.setBackground(java.awt.SystemColor.controlShadow);
        Bnoprov.setFont(new java.awt.Font("Cambria Math", 0, 18)); // NOI18N
        Bnoprov.setText("⊬");
        Bnoprov.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Bnoprov.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BnoprovActionPerformed(evt);
            }
        });

        Bfalse.setBackground(java.awt.SystemColor.controlShadow);
        Bfalse.setFont(new java.awt.Font("Cambria Math", 0, 18)); // NOI18N
        Bfalse.setText("⊥");
        Bfalse.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Bfalse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BfalseActionPerformed(evt);
            }
        });

        Bimpliesc.setBackground(java.awt.SystemColor.controlShadow);
        Bimpliesc.setFont(new java.awt.Font("Cambria Math", 0, 18)); // NOI18N
        Bimpliesc.setText("⊃");
        Bimpliesc.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Bimpliesc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BimpliescActionPerformed(evt);
            }
        });

        Bsubset.setBackground(java.awt.SystemColor.controlShadow);
        Bsubset.setFont(new java.awt.Font("Cambria Math", 0, 18)); // NOI18N
        Bsubset.setText("⊆");
        Bsubset.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Bsubset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BsubsetActionPerformed(evt);
            }
        });

        Bbox.setBackground(java.awt.SystemColor.controlShadow);
        Bbox.setFont(new java.awt.Font("Bodoni MT", 0, 14)); // NOI18N
        Bbox.setText("□");
        Bbox.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Bbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BboxActionPerformed(evt);
            }
        });

        Bintersec.setBackground(java.awt.SystemColor.controlShadow);
        Bintersec.setFont(new java.awt.Font("Cambria Math", 0, 18)); // NOI18N
        Bintersec.setText("∩");
        Bintersec.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Bintersec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BintersecActionPerformed(evt);
            }
        });

        Bunion.setBackground(java.awt.SystemColor.controlShadow);
        Bunion.setFont(new java.awt.Font("Cambria Math", 0, 18)); // NOI18N
        Bunion.setText("∪");
        Bunion.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Bunion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BunionActionPerformed(evt);
            }
        });

        Bnoeq.setBackground(java.awt.SystemColor.controlShadow);
        Bnoeq.setFont(new java.awt.Font("Cambria Math", 0, 18)); // NOI18N
        Bnoeq.setText("≠");
        Bnoeq.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Bnoeq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BnoeqActionPerformed(evt);
            }
        });

        Bin.setBackground(java.awt.SystemColor.controlShadow);
        Bin.setFont(new java.awt.Font("Cambria Math", 0, 18)); // NOI18N
        Bin.setText(" ∈");
        Bin.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Bin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BinActionPerformed(evt);
            }
        });

        Bnoin.setBackground(java.awt.SystemColor.controlShadow);
        Bnoin.setFont(new java.awt.Font("Cambria Math", 0, 18)); // NOI18N
        Bnoin.setText("∉");
        Bnoin.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Bnoin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BnoinActionPerformed(evt);
            }
        });

        Blewis.setBackground(java.awt.SystemColor.controlShadow);
        Blewis.setFont(new java.awt.Font("Cambria Math", 0, 18)); // NOI18N
        Blewis.setText("⥽");
        Blewis.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Blewis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BlewisActionPerformed(evt);
            }
        });

        Bdiamond.setBackground(java.awt.SystemColor.controlShadow);
        Bdiamond.setFont(new java.awt.Font("SansSerif", 0, 19)); // NOI18N
        Bdiamond.setText("◇");
        Bdiamond.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Bdiamond.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BdiamondActionPerformed(evt);
            }
        });

        Bdelta.setBackground(java.awt.SystemColor.controlShadow);
        Bdelta.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        Bdelta.setText("△");
        Bdelta.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Bdelta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BdeltaActionPerformed(evt);
            }
        });

        Bnabla.setBackground(java.awt.SystemColor.controlShadow);
        Bnabla.setFont(new java.awt.Font("Cambria Math", 0, 18)); // NOI18N
        Bnabla.setText("∇");
        Bnabla.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Bnabla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BnablaActionPerformed(evt);
            }
        });

        Brussel.setBackground(java.awt.SystemColor.controlShadow);
        Brussel.setFont(new java.awt.Font("Cambria Math", 0, 18)); // NOI18N
        Brussel.setText("ɿ");
        Brussel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Brussel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BrusselActionPerformed(evt);
            }
        });

        Bempty.setBackground(java.awt.SystemColor.controlShadow);
        Bempty.setFont(new java.awt.Font("Cambria Math", 0, 18)); // NOI18N
        Bempty.setText("∅");
        Bempty.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Bempty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BemptyActionPerformed(evt);
            }
        });

        Bproduc.setBackground(java.awt.SystemColor.controlShadow);
        Bproduc.setFont(new java.awt.Font("Cambria Math", 0, 18)); // NOI18N
        Bproduc.setText("×");
        Bproduc.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Bproduc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BproducActionPerformed(evt);
            }
        });

        Bdefiniton.setBackground(java.awt.SystemColor.controlShadow);
        Bdefiniton.setFont(new java.awt.Font("Cambria Math", 0, 18)); // NOI18N
        Bdefiniton.setText("≝");
        Bdefiniton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Bdefiniton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BdefinitonActionPerformed(evt);
            }
        });

        TResultado.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        TResultado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TResultadoActionPerformed(evt);
            }
        });

        Deletar.setBackground(java.awt.SystemColor.controlShadow);
        Deletar.setFont(new java.awt.Font("Cambria Math", 0, 18)); // NOI18N
        Deletar.setText("Deletar");
        Deletar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Deletar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeletarActionPerformed(evt);
            }
        });

        Limpar.setBackground(java.awt.SystemColor.controlShadow);
        Limpar.setFont(new java.awt.Font("Cambria Math", 0, 18)); // NOI18N
        Limpar.setText("Limpar");
        Limpar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Limpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LimparActionPerformed(evt);
            }
        });

        jSeparator2.setBackground(new java.awt.Color(102, 102, 102));

        javax.swing.GroupLayout TelaLayout = new javax.swing.GroupLayout(Tela);
        Tela.setLayout(TelaLayout);
        TelaLayout.setHorizontalGroup(
            TelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TelaLayout.createSequentialGroup()
                .addGroup(TelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(TelaLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(TResultado, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(TelaLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(TelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator1)
                            .addGroup(TelaLayout.createSequentialGroup()
                                .addComponent(Buniversal, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Bparticular, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Bparticularu, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Bnoparticular, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Bthefore, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Bbecause, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                                .addComponent(Bcongruence, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TelaLayout.createSequentialGroup()
                                .addComponent(Bmequivalence, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Bmimplies, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Bequivalence, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Bimplies, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Bconj, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Bdisj, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Bxor, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(TelaLayout.createSequentialGroup()
                                .addComponent(Bmodels, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Bprov, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Bnomodels, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Bnoprov, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Bfalse, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Bimpliesc, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Bsubset, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(TelaLayout.createSequentialGroup()
                                .addComponent(Bintersec, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Bunion, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Bnoeq, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Bin, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Bnoin, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Blewis, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Bbox, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(TelaLayout.createSequentialGroup()
                                .addComponent(Bdiamond, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Bdelta, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Bnabla, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Brussel, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Bempty, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Bproduc, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Bdefiniton, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(TelaLayout.createSequentialGroup()
                                .addComponent(Deletar, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Limpar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(TelaLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator2)))
                .addContainerGap())
        );
        TelaLayout.setVerticalGroup(
            TelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TelaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TResultado, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(TelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Buniversal, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Bparticular, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Bparticularu, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Bnoparticular, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Bthefore, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Bbecause, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Bcongruence, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(TelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Bmequivalence, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Bmimplies, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Bequivalence, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Bimplies, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Bconj, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Bdisj, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Bxor, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(TelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Bmodels, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Bprov, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Bnomodels, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Bnoprov, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Bfalse, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Bimpliesc, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Bsubset, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(TelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Bintersec, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Bunion, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Bnoeq, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Bin, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Bnoin, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Blewis, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Bbox, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(TelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Bdiamond, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Bdelta, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Bnabla, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Brussel, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Bempty, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Bproduc, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Bdefiniton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addGroup(TelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Deletar)
                    .addComponent(Limpar))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        Moptions.setText("Opções");
        Moptions.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                MoptionsStateChanged(evt);
            }
        });

        JCopiar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_1, java.awt.event.InputEvent.ALT_MASK));
        buttonGroup1.add(JCopiar);
        JCopiar.setText("Copiar");
        JCopiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JCopiarActionPerformed(evt);
            }
        });
        Moptions.add(JCopiar);

        JDigitar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_2, java.awt.event.InputEvent.ALT_MASK));
        buttonGroup1.add(JDigitar);
        JDigitar.setSelected(true);
        JDigitar.setText("Digitar");
        JDigitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JDigitarActionPerformed(evt);
            }
        });
        Moptions.add(JDigitar);

        jMenuBar1.add(Moptions);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Tela, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Tela, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public static int option = 2;
    
    private void BuniversalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuniversalActionPerformed
        // TODO add your handling code here:
        if(option == 1){
            String myString = "∀";
            StringSelection stringSelection = new StringSelection(myString);
            Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
            clipboard.setContents(stringSelection, null);
        }
        else if(option == 2){
            TResultado.setText(TResultado.getText().concat("∀"));
        }
    }//GEN-LAST:event_BuniversalActionPerformed

    private void BparticularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BparticularActionPerformed
        // TODO add your handling code here:
        if(option == 1){
            String myString = "∃";
            StringSelection stringSelection = new StringSelection(myString);
            Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
            clipboard.setContents(stringSelection, null);
        }
        else if(option == 2){
            TResultado.setText(TResultado.getText().concat("∃"));}
    }//GEN-LAST:event_BparticularActionPerformed

    private void BparticularuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BparticularuActionPerformed
        // TODO add your handling code here:
        if(option == 1){
            String myString = "∃!";
            StringSelection stringSelection = new StringSelection(myString);
            Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
            clipboard.setContents(stringSelection, null);
        }
        else if(option == 2){
            TResultado.setText(TResultado.getText().concat("∃!"));}
    }//GEN-LAST:event_BparticularuActionPerformed

    private void BnoparticularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BnoparticularActionPerformed
        // TODO add your handling code here:
        if(option == 1){
            String myString = "∄";
            StringSelection stringSelection = new StringSelection(myString);
            Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
            clipboard.setContents(stringSelection, null);
        }
        else if(option == 2){
            TResultado.setText(TResultado.getText().concat("∄"));}
    }//GEN-LAST:event_BnoparticularActionPerformed

    private void BbecauseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BbecauseActionPerformed
        // TODO add your handling code here:
        if(option == 1){
            String myString = "∵";
            StringSelection stringSelection = new StringSelection(myString);
            Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
            clipboard.setContents(stringSelection, null);
        }
        else if(option == 2){
            TResultado.setText(TResultado.getText().concat("∵"));}
    }//GEN-LAST:event_BbecauseActionPerformed

    private void BtheforeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtheforeActionPerformed
        // TODO add your handling code here:
        if(option == 1){
            String myString = "∴";
            StringSelection stringSelection = new StringSelection(myString);
            Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
            clipboard.setContents(stringSelection, null);
        }
        else if(option == 2){
            TResultado.setText(TResultado.getText().concat("∴"));}
    }//GEN-LAST:event_BtheforeActionPerformed

    private void BcongruenceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BcongruenceActionPerformed
        // TODO add your handling code here:
        if(option == 1){
            String myString = "≡";
            StringSelection stringSelection = new StringSelection(myString);
            Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
            clipboard.setContents(stringSelection, null);
        }
        else if(option == 2){
            TResultado.setText(TResultado.getText().concat("≡"));}
    }//GEN-LAST:event_BcongruenceActionPerformed

    private void BmequivalenceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BmequivalenceActionPerformed
        // TODO add your handling code here:
        if(option == 1){
            String myString = "⇔";
            StringSelection stringSelection = new StringSelection(myString);
            Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
            clipboard.setContents(stringSelection, null);
        }
        else if(option == 2){
            TResultado.setText(TResultado.getText().concat("⇔"));}
    }//GEN-LAST:event_BmequivalenceActionPerformed

    private void BmimpliesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BmimpliesActionPerformed
        // TODO add your handling code here:
        if(option == 1){
            String myString = "⇒";
            StringSelection stringSelection = new StringSelection(myString);
            Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
            clipboard.setContents(stringSelection, null);
        }
        else if(option == 2){
            TResultado.setText(TResultado.getText().concat("⇒"));}
    }//GEN-LAST:event_BmimpliesActionPerformed

    private void BequivalenceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BequivalenceActionPerformed
        // TODO add your handling code here:
        if(option == 1){
            String myString = "↔";
            StringSelection stringSelection = new StringSelection(myString);
            Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
            clipboard.setContents(stringSelection, null);
        }
        else if(option == 2){
            TResultado.setText(TResultado.getText().concat("↔"));}
    }//GEN-LAST:event_BequivalenceActionPerformed

    private void BimpliesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BimpliesActionPerformed
        // TODO add your handling code here:
        if(option == 1){
            String myString = "→";
            StringSelection stringSelection = new StringSelection(myString);
            Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
            clipboard.setContents(stringSelection, null);
        }
        else if(option == 2){
            TResultado.setText(TResultado.getText().concat("→"));}
    }//GEN-LAST:event_BimpliesActionPerformed

    private void BconjActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BconjActionPerformed
        // TODO add your handling code here:
        if(option == 1){
            String myString = "∧";
            StringSelection stringSelection = new StringSelection(myString);
            Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
            clipboard.setContents(stringSelection, null);
        }
        else if(option == 2){
            TResultado.setText(TResultado.getText().concat("∧"));}
    }//GEN-LAST:event_BconjActionPerformed

    private void BdisjActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BdisjActionPerformed
        // TODO add your handling code here:
        if(option == 1){
            String myString = "∨";
            StringSelection stringSelection = new StringSelection(myString);
            Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
            clipboard.setContents(stringSelection, null);
        }
        else if(option == 2){
            TResultado.setText(TResultado.getText().concat("∨"));}
    }//GEN-LAST:event_BdisjActionPerformed

    private void BxorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BxorActionPerformed
        // TODO add your handling code here:
        if(option == 1){
            String myString = "⊕";
            StringSelection stringSelection = new StringSelection(myString);
            Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
            clipboard.setContents(stringSelection, null);
        }
        else if(option == 2){
            TResultado.setText(TResultado.getText().concat("⊕"));}
    }//GEN-LAST:event_BxorActionPerformed

    private void BmodelsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BmodelsActionPerformed
        // TODO add your handling code here:
        if(option == 1){
            String myString = "⊨";
            StringSelection stringSelection = new StringSelection(myString);
            Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
            clipboard.setContents(stringSelection, null);
        }
        else if(option == 2){
            TResultado.setText(TResultado.getText().concat("⊨"));}
    }//GEN-LAST:event_BmodelsActionPerformed

    private void BprovActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BprovActionPerformed
        // TODO add your handling code here:
        if(option == 1){
            String myString = "⊢";
            StringSelection stringSelection = new StringSelection(myString);
            Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
            clipboard.setContents(stringSelection, null);
        }
        else if(option == 2){
            TResultado.setText(TResultado.getText().concat("⊢"));}
    }//GEN-LAST:event_BprovActionPerformed

    private void BnomodelsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BnomodelsActionPerformed
        // TODO add your handling code here:
        if(option == 1){
            String myString = "⊭";
            StringSelection stringSelection = new StringSelection(myString);
            Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
            clipboard.setContents(stringSelection, null);
        }
        else if(option == 2){
            TResultado.setText(TResultado.getText().concat("⊭"));}
    }//GEN-LAST:event_BnomodelsActionPerformed

    private void BnoprovActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BnoprovActionPerformed
        // TODO add your handling code here:
        if(option == 1){
            String myString = "⊬";
            StringSelection stringSelection = new StringSelection(myString);
            Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
            clipboard.setContents(stringSelection, null);
        }
        else if(option == 2){
            TResultado.setText(TResultado.getText().concat("⊬"));}
    }//GEN-LAST:event_BnoprovActionPerformed

    private void BfalseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BfalseActionPerformed
        // TODO add your handling code here:
        if(option == 1){
            String myString = "⊥";
            StringSelection stringSelection = new StringSelection(myString);
            Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
            clipboard.setContents(stringSelection, null);
        }
        else if(option == 2){
            TResultado.setText(TResultado.getText().concat("⊥"));}
    }//GEN-LAST:event_BfalseActionPerformed

    private void BimpliescActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BimpliescActionPerformed
        // TODO add your handling code here:
        if(option == 1){
            String myString = "⊃";
            StringSelection stringSelection = new StringSelection(myString);
            Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
            clipboard.setContents(stringSelection, null);
        }
        else if(option == 2){
            TResultado.setText(TResultado.getText().concat("⊃"));}
    }//GEN-LAST:event_BimpliescActionPerformed

    private void BsubsetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BsubsetActionPerformed
        // TODO add your handling code here:
        if(option == 1){
            String myString = "⊆";
            StringSelection stringSelection = new StringSelection(myString);
            Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
            clipboard.setContents(stringSelection, null);
        }
        else if(option == 2){
            TResultado.setText(TResultado.getText().concat("⊆"));}
    }//GEN-LAST:event_BsubsetActionPerformed

    private void BboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BboxActionPerformed
        // TODO add your handling code here:
        if(option == 1){
            String myString = "□";
            StringSelection stringSelection = new StringSelection(myString);
            Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
            clipboard.setContents(stringSelection, null);
        }
        else if(option == 2){
            TResultado.setText(TResultado.getText().concat("□"));}
    }//GEN-LAST:event_BboxActionPerformed

    private void BintersecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BintersecActionPerformed
        // TODO add your handling code here:
        if(option == 1){
            String myString = "∩";
            StringSelection stringSelection = new StringSelection(myString);
            Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
            clipboard.setContents(stringSelection, null);
        }
        else if(option == 2){
            TResultado.setText(TResultado.getText().concat("∩"));}
    }//GEN-LAST:event_BintersecActionPerformed

    private void BunionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BunionActionPerformed
        // TODO add your handling code here:
        if(option == 1){
            String myString = "∪";
            StringSelection stringSelection = new StringSelection(myString);
            Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
            clipboard.setContents(stringSelection, null);
        }
        else if(option == 2){
            TResultado.setText(TResultado.getText().concat("∪"));}
    }//GEN-LAST:event_BunionActionPerformed

    private void BnoeqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BnoeqActionPerformed
        // TODO add your handling code here:
        if(option == 1){
            String myString = "≠";
            StringSelection stringSelection = new StringSelection(myString);
            Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
            clipboard.setContents(stringSelection, null);
        }
        else if(option == 2){
            TResultado.setText(TResultado.getText().concat("≠"));}
    }//GEN-LAST:event_BnoeqActionPerformed

    private void BinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BinActionPerformed
        // TODO add your handling code here:
        if(option == 1){
            String myString = "∈";
            StringSelection stringSelection = new StringSelection(myString);
            Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
            clipboard.setContents(stringSelection, null);
        }
        else if(option == 2){
            TResultado.setText(TResultado.getText().concat("∈"));}
    }//GEN-LAST:event_BinActionPerformed

    private void BnoinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BnoinActionPerformed
        // TODO add your handling code here:
        if(option == 1){
            String myString = "∉";
            StringSelection stringSelection = new StringSelection(myString);
            Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
            clipboard.setContents(stringSelection, null);
        }
        else if(option == 2){
            TResultado.setText(TResultado.getText().concat("∉"));}
    }//GEN-LAST:event_BnoinActionPerformed

    private void BlewisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BlewisActionPerformed
        // TODO add your handling code here:
        if(option == 1){
            String myString = "⥽";
            StringSelection stringSelection = new StringSelection(myString);
            Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
            clipboard.setContents(stringSelection, null);
        }
        else if(option == 2){
            TResultado.setText(TResultado.getText().concat("⥽"));}
    }//GEN-LAST:event_BlewisActionPerformed

    private void BdiamondActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BdiamondActionPerformed
        // TODO add your handling code here:
        if(option == 1){
            String myString = "◇";
            StringSelection stringSelection = new StringSelection(myString);
            Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
            clipboard.setContents(stringSelection, null);
        }
        else if(option == 2){
            TResultado.setText(TResultado.getText().concat("◇"));}
    }//GEN-LAST:event_BdiamondActionPerformed

    private void BdeltaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BdeltaActionPerformed
        // TODO add your handling code here:
        if(option == 1){
            String myString = "△";
            StringSelection stringSelection = new StringSelection(myString);
            Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
            clipboard.setContents(stringSelection, null);
        }
        else if(option == 2){
            TResultado.setText(TResultado.getText().concat("△"));}
    }//GEN-LAST:event_BdeltaActionPerformed

    private void BnablaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BnablaActionPerformed
        // TODO add your handling code here:
        if(option == 1){
            String myString = "∇";
            StringSelection stringSelection = new StringSelection(myString);
            Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
            clipboard.setContents(stringSelection, null);
        }
        else if(option == 2){
            TResultado.setText(TResultado.getText().concat("∇"));}
    }//GEN-LAST:event_BnablaActionPerformed

    private void BrusselActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BrusselActionPerformed
        // TODO add your handling code here:
        if(option == 1){
            String myString = "ɿ";
            StringSelection stringSelection = new StringSelection(myString);
            Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
            clipboard.setContents(stringSelection, null);
        }
        else if(option == 2){
            TResultado.setText(TResultado.getText().concat("ɿ"));}
    }//GEN-LAST:event_BrusselActionPerformed

    private void BemptyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BemptyActionPerformed
        // TODO add your handling code here:
        if(option == 1){
            String myString = "∅";
            StringSelection stringSelection = new StringSelection(myString);
            Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
            clipboard.setContents(stringSelection, null);
        }
        else if(option == 2){
            TResultado.setText(TResultado.getText().concat("∅"));}
    }//GEN-LAST:event_BemptyActionPerformed

    private void BproducActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BproducActionPerformed
        // TODO add your handling code here:
        if(option == 1){
            String myString = "×";
            StringSelection stringSelection = new StringSelection(myString);
            Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
            clipboard.setContents(stringSelection, null);
        }
        else if(option == 2){
            TResultado.setText(TResultado.getText().concat("×"));}
    }//GEN-LAST:event_BproducActionPerformed

    private void BdefinitonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BdefinitonActionPerformed
        // TODO add your handling code here:
        if(option == 1){
            String myString = "≝";
            StringSelection stringSelection = new StringSelection(myString);
            Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
            clipboard.setContents(stringSelection, null);
        }
        else if(option == 2){
            TResultado.setText(TResultado.getText().concat("≝"));}
        
    }//GEN-LAST:event_BdefinitonActionPerformed

    private void JCopiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JCopiarActionPerformed
        // TODO add your handling code here:
        option = 1;
        TResultado.setVisible(false);
        Deletar.setVisible(false);
        Limpar.setVisible(false);
        
    }//GEN-LAST:event_JCopiarActionPerformed

    private void JDigitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JDigitarActionPerformed
        // TODO add your handling code here:
        option = 2;
        TResultado.setVisible(true);
        Deletar.setVisible(true);
        Limpar.setVisible(true);
        
    }//GEN-LAST:event_JDigitarActionPerformed

    private void TResultadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TResultadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TResultadoActionPerformed

    private void MoptionsStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_MoptionsStateChanged
        // TODO add your handling code here:
        
    }//GEN-LAST:event_MoptionsStateChanged

    private void DeletarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeletarActionPerformed
        // TODO add your handling code here:
        if(TResultado.getText().length() > 0 ){
            TResultado.setText(TResultado.getText().substring(0,TResultado.getText().length()-1));
        }
        
        
    }//GEN-LAST:event_DeletarActionPerformed

    private void LimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LimparActionPerformed
        // TODO add your handling code here:
        TResultado.setText("");
    }//GEN-LAST:event_LimparActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(keyboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(keyboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(keyboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(keyboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new keyboard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Bbecause;
    private javax.swing.JButton Bbox;
    private javax.swing.JButton Bcongruence;
    private javax.swing.JButton Bconj;
    private javax.swing.JButton Bdefiniton;
    private javax.swing.JButton Bdelta;
    private javax.swing.JButton Bdiamond;
    private javax.swing.JButton Bdisj;
    private javax.swing.JButton Bempty;
    private javax.swing.JButton Bequivalence;
    private javax.swing.JButton Bfalse;
    private javax.swing.JButton Bimplies;
    private javax.swing.JButton Bimpliesc;
    private javax.swing.JButton Bin;
    private javax.swing.JButton Bintersec;
    private javax.swing.JButton Blewis;
    private javax.swing.JButton Bmequivalence;
    private javax.swing.JButton Bmimplies;
    private javax.swing.JButton Bmodels;
    private javax.swing.JButton Bnabla;
    private javax.swing.JButton Bnoeq;
    private javax.swing.JButton Bnoin;
    private javax.swing.JButton Bnomodels;
    private javax.swing.JButton Bnoparticular;
    private javax.swing.JButton Bnoprov;
    private javax.swing.JButton Bparticular;
    private javax.swing.JButton Bparticularu;
    private javax.swing.JButton Bproduc;
    private javax.swing.JButton Bprov;
    private javax.swing.JButton Brussel;
    private javax.swing.JButton Bsubset;
    private javax.swing.JButton Bthefore;
    private javax.swing.JButton Bunion;
    private javax.swing.JButton Buniversal;
    private javax.swing.JButton Bxor;
    private javax.swing.JButton Deletar;
    private javax.swing.JRadioButtonMenuItem JCopiar;
    private javax.swing.JRadioButtonMenuItem JDigitar;
    private javax.swing.JButton Limpar;
    private javax.swing.JMenu Moptions;
    private javax.swing.JTextField TResultado;
    private javax.swing.JPanel Tela;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    // End of variables declaration//GEN-END:variables
}
